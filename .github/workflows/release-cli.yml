name: Release CLI

on:
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read app version
        id: read_version
        run: |
          VERSION=$(cat .app_version)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          CURRENT_TAG="v${VERSION}"
          echo "CURRENT_TAG=${CURRENT_TAG}" >> $GITHUB_ENV
          echo "最新タグ：${CURRENT_TAG}"

      - name: get Tag ver
        id: get_tag_ver
        run: |
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "CURRENT_COMMIT=${CURRENT_COMMIT}" >> $GITHUB_ENV
          echo "現在のコミットハッシュ：${CURRENT_COMMIT}"

          PREVIOUS_TAG=$(git tag --sort=creatordate | tail -n1)
          echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> $GITHUB_ENV
          echo "PREVIOUS_TAG：${PREVIOUS_TAG}"

      - name: release diff get
        id: commit_diff
        run: |
          echo -e ":clock10: release date: $(TZ=Asia/Tokyo date +%Y-%m-%d-%H%M%S)\n" > DIFF_COMMIT
          echo "$(git log --reverse --pretty=format:'* %s' ${PREVIOUS_TAG}..${CURRENT_COMMIT} -- client)" >> DIFF_COMMIT
          echo "diff：$(cat DIFF_COMMIT)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.CURRENT_TAG }}
          release_name: ${{ env.VERSION }}
          body_path: DIFF_COMMIT
          draft: false
          prerelease: false

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22.1"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          cd client
          go mod download

      - name: Build
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          cd client
          make dist

      - name: Upload Release Asset (darwin-amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/dist/filetree_dumper-darwin-amd64
          asset_name: filetree_dumper-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (darwin-arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/dist/filetree_dumper-darwin-arm64
          asset_name: filetree_dumper-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (linux-amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/dist/filetree_dumper-linux-amd64
          asset_name: filetree_dumper-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (linux-arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: client/dist/filetree_dumper-linux-arm64
          asset_name: filetree_dumper-linux-arm64
          asset_content_type: application/octet-stream
